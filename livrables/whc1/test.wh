function inc:
read X	
%
X := (cons nil X)
%	
write X

function dec:
read X
%
X := (tl X)
%	
write X

function equalToA:
read X
%
X := (X =? a)
%	
write X 

function equals:
read X, Y
%
X := (X =? Y)
%	
write X

function echange:
read X, Y
%
X,Y := Y,X
%	
write X,Y

function notor:
read X, Y
%
Z := (not(Y or X))
%	
write Z

function main:
read X
%
for X do
  Y:= (cons nil Y)
od
%
write Y
