/**
 * generated by Xtext 2.15.0
 */
package compilation.generator;

import com.google.common.collect.Iterators;
import compilation.whileLanguage.Function;
import java.util.Map;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class WhileLanguageGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final Function1<Function, String> _function = (Function it) -> {
      return it.getName();
    };
    String _join = IteratorExtensions.join(IteratorExtensions.<Function, String>map(Iterators.<Function>filter(resource.getAllContents(), Function.class), _function), ", ");
    String _plus = ("People to greet: " + _join);
    fsa.generateFile("greetings.txt", _plus);
  }
  
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context, final String output, final Map<String, Integer> indentations) {
    final Function1<Function, String> _function = (Function it) -> {
      return it.getName();
    };
    String _join = IteratorExtensions.join(IteratorExtensions.<Function, String>map(Iterators.<Function>filter(resource.getAllContents(), Function.class), _function), ", ");
    String _plus = ("People to greet: " + _join);
    fsa.generateFile(output, _plus);
  }
}
