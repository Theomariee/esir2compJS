grammar compilation.WhileLanguage with org.eclipse.xtext.common.Terminals

generate whileLanguage "http://www.WhileLanguage.compilation"

/* HEAD */
Program:
	(functions+=Function)*
;
	
Function:
	'function' name=SYMBOL ':' definition=Definition
;

Definition:
	read = Read
	'%'
	commands=Commands
	'%'
	write = Write
;

/* Input & Output */

Read :
	'read' variable+=VARIABLE (',' variable+=VARIABLE)*
;
Write :
	'write' variable+=VARIABLE (',' variable+=VARIABLE)*
;


/* Commandes */

Affectation:
	affectations += VARIABLE (',' affectations += VARIABLE)* ':=' valeurs += Expr (',' valeurs += Expr)*
;

Nop:
	nop='nop'
;

Commands:
	commands+=Command (';' commands+=Command)*
;

Command:
	command=Nop | 
	command=Affectation | 
	command=While|
	command=For|
	command=If|
	command=Foreach	
;

Foreach:
	('foreach' variable=VARIABLE 'in' expr=Expr 'do' commands=Commands 'od')
;

If:
	('if' expr=Expr 'then' commands1=Commands (=>'else' commands2=Commands)? 'fi') 	
;

For:
	('for' expr=Expr 'do' commands=Commands 'od') 
;

While:
	('while' expr=Expr 'do' commands=Commands 'od')
;

Expr:
	valeur='nil' | valeur=VARIABLE | symb=SYMBOL |
	'(' ope='cons' lexpr=Lexpr ')' |
	'(' ope='list' lexpr=Lexpr ')' |
	'(' ope=SYMBOL lexpr=Lexpr ')'|
	'(' ope='hd' expr=Expr ')' |
	'(' ope='tl' expr=Expr ')' |
	'(' ope='not' expr=Expr ')' |
	'(' ex1=Expr ope=('and' | 'or' | '=?') ex2=Expr ')'
;


Lexpr:
	exprs+=Expr (exprs+=Expr)*
;



terminal VARIABLE:
	'A'..'Z'('A'..'Z'|'a'..'z')*
;
	
terminal SYMBOL:
	'a'..'z'('A'..'Z'|'a'..'z'|'0'..'9')*
	((('-'|'+'|'.'|'/'|'_'|'&')|"->")('A'..'Z'|'a'..'z'|'0'..'9')+)*
	('!'|'?')?
;